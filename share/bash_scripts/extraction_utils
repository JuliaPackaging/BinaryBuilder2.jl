#!/bin/bash

extract() {
    prefix="$(realpath "${prefix}")"
    for arg in "$@"; do
        files=( $(compgen -G "${arg}") )
        for file in "${files[@]}"; do
            file="$(realpath "${file}")"

            CP_FLAGS=( "-a" )
            if [[ "${BB_PRINT_COMMANDS}" == "true" ]]; then
                CP_FLAGS+=( "-v" )
                #echo "extracting: ${file##${prefix}/}" >&2
            fi

            dest="${extract_dir}/${file##${prefix}/}"
            mkdir -p "$(dirname "${dest}")"
            cp "${CP_FLAGS[@]}" "${file}" "${dest}"
        done
    done
}

install_license() {
    if [ $# -eq 0 ]; then
        echo "Usage: install_license license_file1.txt [license_file2.md, license_file3.rtf, ...]" >&2
        exit 1
    fi
    for file in "$@"; do
        DEST="${prefix}/share/licenses/${SRC_NAME}/$(basename "${file}")"
        echo "Installing license file \"$file\" to \"${DEST}\"..."
        install -Dm644 "${file}" "${DEST}"
    done
}

# "quiet find"
qfind() {
    find "$@" 2>/dev/null
}

has_license_dir() {
    [[ -d "${prefix}/share/licenses/${SRC_NAME}" ]]
}

find_license_files() {
    # Build the list of known names for license files
    LICENSE_FILENAMES=()
    for bname in COPYING COPYRIGHT LICENCE LICENSE NOTICE; do
        for extension in "" .md .rtf .txt .MIT .BSD .GPL .GPLv2 .GPLv3; do
            # These are actually going to be options for `find`
            LICENSE_FILENAMES+=(-iname "${bname}${extension}" -o)
        done
    done
    # Remove the last OR
    unset 'LICENSE_FILENAMES[${#LICENSE_FILENAMES[@]}-1]'

    # Find the license files in $1 and print them out
    find "$1" -maxdepth 1 -type f \( "${LICENSE_FILENAMES[@]}" \) -print0 2>/dev/null
}

# Function to attempt to automatically install license files
auto_install_license() {
    if ! has_license_dir; then
        # The license directory doesn't exist, let's find all licenses
        ROOTDIR="${WORKSPACE}/srcdir"
        readarray -d '' LICENSE_FILES < <(find_license_files "${ROOTDIR}")

        if [[ "${#LICENSE_FILES[@]}" == 0 ]]; then
            # If we didn't find any license files, try again if there is a single subdirectory of `srcdir`,
            # (excluding `patches`).  This allows us to easily unwrap single-directory srcdirs,
            # which is a very common scenario.
            readarray -d '' SUBDIRS < <(find "${ROOTDIR}" -mindepth 1 -maxdepth 1 -type d -not -path "${ROOTDIR}/patches" -print0 2>/dev/null)
            if [[ "${#SUBDIRS[@]}" == "1" ]]; then
                readarray -d '' LICENSE_FILES < <(find_license_files "${ROOTDIR}/${SUBDIRS[0]}")
            fi
        fi

        if [[ "${#LICENSE_FILES[@]}" != 0 ]]; then
            install_license "${LICENSE_FILES[@]}"
        fi
    fi

    if [[ "$@" == "-c" ]]; then
        # If we pass the `-c` option, return code shows whether there is a license installed
        has_license_dir
    fi
}
